..
mod_jk

https://www.middlewareinventory.com/blog/tomcat-modjk-configuration-installation/


https://www.middlewareinventory.com/blog/docker-tomcat-example-dockerfile-sample/

mavan life cycle
-----------------

validate - validate the project is correct and all necessary information is available

compile - compile the source code of the project

test - test the compiled source code using a suitable unit testing framework. 
These tests should not require the code be packaged or deployed

package - take the compiled code and package it in its distributable format, such as a JAR.

verify - run any checks on results of integration tests to ensure quality criteria are met

install - install the package into the local repository, 
for use as a dependency in other projects locally

deploy - done in the build environment, 
copies the final package to the remote repository for sharing with other developers and projects.


tomcat with jenkins
----------------------


Step1: Make Sure you have Git and Maven installed

In Jenkins UI, Goto Manage Jenkins -> Global Tool Configuration  git and mavan

Step2: Install Deploy to Container Plugin


Manage Jenkins -> Manage Plugins -> Available -> Deploy to Container Plugin


Note:* For the Next step we have selected a Maven Job as our Choice. 
you can also create a Free Style Project and use Gradle or Ant as your build tool .


Step3: Create and Configure a Maven Job with Source Code Management (Github)


New Item -> Maven Project


In the Configuration Section, Under Source Code Management Fill your 
Github/BeanStalk/Gitlab Repository URL


Step4: Configure the Post-build Action and Specify the Tomcat Server Details

Drag to the bottom and Go to the Post-build Actions section

Step5: Click on Add post-build action button


On the available options click on the Deploy war/ear to container

Choose the Context Path in which the application should be installed. 
It would rename the WAR file before deploying to the server and thereby the application context root would be changed.

Tomcat URL http://[Tomcat Server Host]:[Primary http port]/




------------------------------------------------------------------------------------


DOCKEAR


# How to start and stop the container 

docker stop <containername/id>  # to stop the container which is running in background mode
docker container start <containername/id> # to start the already stopped container

# monitoring the Container 

docker container list # list the containers created
docker container ls -a  #to list the containers including not running containers
docker ps    #to list the running container
docker info #docker engine status including container running/paused/stopped containers list
docker container stats <containername/id> #prints the CPU and MEM usage data of the container name
docker container stats #prints the CPU and MEM usage of all running containers
docker container top <containername/id> #executes the top command in the container specified, 
fails if the specified container is not running

# How to remove/delete the container

docker container rm <containername/id> # Remove the Container 

# How to remove/delete the image

docker container rmi <imagename/imageid> # Remove the image
# How to view the logs of the running container

docker container logs <containername/id> # 


FROM centos

MAINTAINER aksarav@middlewareinventory.com

RUN mkdir /opt/tomcat/

WORKDIR /opt/tomcat
RUN curl -O https://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.40/bin/apache-tomcat-8.5.40.tar.gz
RUN tar xvfz apache*.tar.gz
RUN mv apache-tomcat-8.5.40/* /opt/tomcat/.
RUN yum -y install java
RUN java -version

WORKDIR /opt/tomcat/webapps
RUN curl -O -L https://github.com/AKSarav/SampleWebApp/raw/master/dist/SampleWebApp.war

EXPOSE 8080

CMD ["/opt/tomcat/bin/catalina.sh", "run"]

---------------------------

root@ubuntu-xenial:~# cat FileforSupervisor/Dockerfile
FROM ubuntu
MAINTAINER <anand@brainstack.in>
RUN apt-get update
RUN apt-get install supervisor apache2 openssh-server -y
RUN mkdir /var/lock/apache2 /var/run/apache2 /var/run/sshd
RUN sed -i '/\[supervisord\]/a nodaemon=true' /etc/supervisor/supervisord.conf
RUN echo 'root:redhat123' | chpasswd
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
COPY myservice.conf /etc/supervisor/conf.d/
EXPOSE 80 22
CMD ["supervisord"]
root@ubuntu-xenial:~# cat FileforSupervisor/myservice.conf
[program:sshd]
command=/usr/sbin/sshd -D

[program:apache2]

command=/bin/bash -c "source /etc/apache2/envvars && exec /usr/sbin/apache2 -DFOREGROUND"


---------------------------------


root@ubuntu-xenial:~# cat FileforEntrypoint/Dockerfile
FROM ubuntu
MAINTAINER <anand@brainstack.in>
RUN apt-get update
RUN apt-get install apache2 -y
RUN mkdir /var/lock/apache2  /var/run/apache2
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_PID_FILE /var/run/apache2/apache2.pid
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_RUN_DIR /var/run/apache2
ENV LANG C
WORKDIR /var/www/html
COPY ./entrypoint.sh /root/entrypoint.sh
ENTRYPOINT /root/entrypoint.sh
EXPOSE 80

--------------------------------------------

root@ubuntu-xenial:~# cat FileforEntrypoint/entrypoint.sh
#!/bin/bash
rm -f /var/run/apache2/apache2.pid

/usr/sbin/apache2 -DFOREGROUND



-------------------------------------


FROM ubuntu
MAINTAINER <anand@brainstack.in>
RUN apt-get update
RUN apt-get install apache2 -y
RUN mkdir /var/lock/apache2  /var/run/apache2
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_PID_FILE /var/run/apache2/apache2.pid
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_RUN_DIR /var/run/apache2
ENV LANG C
CMD ["/usr/sbin/apache2", "-D", "FOREGROUND"]
EXPOSE 80

---------------------------------------------

FROM ubuntu
MAINTAINER anand@brainstack.in
RUN apt-get update
RUN apt-get install openssh-server -y
RUN cp /etc/ssh/sshd_config /root/sshd_config.org
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN echo 'root:redhat123' | chpasswd
RUN mkdir /var/run/sshd
CMD ["/usr/sbin/sshd", "-D"]
EXPOSE 22

--------------------------------------

FROM ubuntu
MAINTAINER anand@brainstack.in
RUN apt-get update
RUN apt-get install openssh-server -y
RUN cp /etc/ssh/sshd_config /root/sshd_config.org
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN echo 'root:redhat123' | chpasswd
RUN mkdir /var/run/sshd
CMD ['/usr/sbin/sshd', '-D']
EXPOSE 22

---------------------------------------------------------------------------------------------
























